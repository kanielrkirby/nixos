# Global / General
bind = SUPER, space, exec, fuzzel
binde = ALT, Q, killactive
bindm = ALT, mouse:272, movewindow
bindm = ALT, mouse:273, resizewindow

# Fn / Function Keys
bindelt = , XF86AudioRaiseVolume, exec, wpctl set-volume @DEFAULT_SINK@ 5%+ -l 1.0
bindelt = , XF86AudioLowerVolume, exec, wpctl set-volume @DEFAULT_SINK@ 5%- -l 1.0
bindelt = , XF86AudioMute, exec, wpctl set-mute @DEFAULT_SINK@ toggle
bindelt = SUPER, XF86AudioRaiseVolume, exec, wpctl set-volume @DEFAULT_SINK@ 5%+
bindelt = SUPER, XF86AudioLowerVolume, exec, wpctl set-volume @DEFAULT_SINK@ 5%-
bindelt = , XF86MonBrightnessUp, exec, brightnessctl set +5%
bindelt = , XF86MonBrightnessDown, exec, brightnessctl set 5%-
bind = , Print, exec, grim "/home/mx/Pictures/$(date +%Y%m%d-%H%M%S).png"
bind = SUPER, Print, exec, grim -g "$(slurp)" "/home/mx/Pictures/$(date +%Y%m%d-%H%M%S).png"
bind = SUPER+SHIFT, Print, exec, wf-recorder -f ~/Videos/$(date +"%Y%m%d-%H%M%S").mp4
bind = SUPER+CTRL, Print, exec, pkill -SIGINT wf-recorder
bindelt = , XF86AudioPlay, exec, playerctl play-pause
bindelt = , XF86AudioNext, exec, playerctl position 5+
bindelt = , XF86AudioPrev, exec, playerctl position 5-
bindelt = , XF86AudioMedia, exec, notify-send $(acpi -b)

# Pass / 2FA
bind = SUPER, Period, exec, kitty -c "gopass"

# Vim-like window movement
binde = SUPER, H, movewindow, l
binde = SUPER, L, movewindow, r
binde = SUPER, K, movewindow, u
binde = SUPER, J, movewindow, d
binde = SUPER+SHIFT_L, H, movefocus, l
binde = SUPER+SHIFT_L, L, movefocus, r
binde = SUPER+SHIFT_L, K, movefocus, u
binde = SUPER+SHIFT_L, J, movefocus, d

bindrtl = SUPER, SUPER_L, submap, reset

# Primary Submap
bind = SUPER, semicolon, submap, primary
submap = primary
bind = SUPER, N, submap, n
bind = SUPER, M, submap, mullvad
bind = SUPER, F, submap, fanduty
bind = SUPER, S, submap, syncthing
bind = SUPER, B, submap, bluetooth
bind = SUPER, O, submap, browser
bind = SUPER, E, submap, system
bind = SUPER, L, submap, launch
bind = SUPER, V, submap, vm
bind = SUPER, W, submap, wallpaper
bind = SUPER, T, exec, pkill -SIGUSR1 waybar
bindit = , escape, submap, reset
bindrt = SUPER, SUPER_L, submap, reset
submap = reset

# Launch
submap = launch
binde = SUPER, T, exec, kitty
binde = SUPER, E, exec, thunar
binde = SUPER, V, exec, virt-manager
binde = SUPER, W, exec, chromium
binde = SUPER, B, exec, kitty btop
binde = SUPER, Z, exec, signal-desktop --ozone-platform=wayland
binde = SUPER, C, exec, code --ozone-platform=wayland
binde = SUPER, N, exec, kitty "neovide $HOME"
binde = SUPER, M, exec, thunderbird
binde = SUPER, V, exec, virt-manager
binde = SUPER, D, exec, dbeaver
binde = SUPER, L, exec, localsend_app
binde = SUPER, F, exec, foliate
bindit = , escape, submap, reset
bindrt = SUPER, SUPER_L, submap, reset
submap = reset

# Browser Mode
submap = browser
binde = SUPER, Y, exec, chromium --app="https://youtube.com"
binde = SUPER+SHIFT, Y, exec, chromium --app="https://music.youtube.com"
binde = SUPER, G, exec, chromium https://github.com/kanielrkirby
binde = SUPER, E, exec, chromium --app="https://excalidraw.com"
binde = SUPER, T, exec, chromium https://trello.com/b/m5QBnONR
binde = SUPER, D, exec, chromium https://discord.com/app
binde = SUPER, C, exec, chromium https://chatgpt.com/?model=gpt-4o&temporary-chat=true
binde = SUPER, L, exec, chromium https://linkedin.com
binde = SUPER, N, exec, chromium https://mynixos.com
binde = SUPER, R, exec, chromium https://reddit.com
binde = SUPER, P, exec, chromium https://pexels.com
binde = SUPER, F, exec, chromium https://my.freshbooks.com
binde = SUPER, M, exec, chromium --app="https://runbox.com/app"
binde = SUPER, S, exec, chromium --app="https://app.simplenote.com"
binde = SUPER, V, exec, chromium https://vscode.dev
bindit = , escape, submap, reset
bindrt = SUPER, SUPER_L, submap, reset
submap = reset

# System Mode
submap = system
bind = SUPER, R, exec, reboot
bind = SUPER, D, exec, shutdown
bind = SUPER, L, exec, hyprlock
bindit = , escape, submap, reset
bindrt = SUPER, SUPER_L, submap, reset
submap = reset

# Mullvad Mode
submap = mullvad
bind = SUPER, R, exec, if [[ "$(mullvad status | grep "Disconnected")" ]]; then notify-send "Connecting..."; mullvad connect --wait; else notify-send "Reconnecting..."; mullvad reconnect --wait; fi; notify-send "$(mullvad status);"
bind = SUPER, C, exec, if [[ ! "$(mullvad status | grep "Disconnected")" ]]; then notify-send "Already Connected"; else notify-send "Connecting..."; mullvad connect --wait; notify-send "$(mullvad status)"; fi
bind = SUPER, D, exec, notify-send "Disconnecting..."; mullvad disconnect --wait; notify-send "$(mullvad status)"
bind = SUPER, O, exec, notify-send "$(mullvad status)"
bindit = , escape, submap, reset
bindrt = SUPER, SUPER_L, submap, reset
submap=reset

# Nightlight / Notification Mode
submap = n
bind = SUPER, A, exec, hyprshade auto
bind = SUPER, 0, exec, hyprshade off
bind = SUPER, 1, exec, hyprshade on blue-light-filter
bind = SUPER, D, exec, dunstctl close-all
bindit = , escape, submap, reset
bindrt = SUPER, SUPER_L, submap, reset
submap = reset

# Wallpaper Mode
submap = wallpaper
bind = SUPER, C, exec, wallpaper
bind = SUPER, D, exec, wallpaper kill
bind = SUPER, R, exec, wallpaper reload
bindit = , escape, submap, reset
bindrt = SUPER, SUPER_L, submap, reset
submap = reset

# Bluetooth Mode
submap = bluetooth
bind = SUPER, C, submap, bluetooth_connect
bind = SUPER, D, submap, bluetooth_disconnect
bind = SUPER, escape, submap, reset
bindit = , escape, submap, reset
bindrt = SUPER, SUPER_L, submap, reset
submap = reset

# Bluetooth Connect Mode
submap = bluetooth_connect
bind = SUPER, H, exec, n="TOZO-NC2"; d="$(bluetoothctl devices | grep $n)"; dc="$(bluetoothctl devices Connected | grep $n)"; if [[ "$(echo $dc)" ]]; then notify-send "Already connected."; else notify-send "Connecting..."; bluetoothctl connect "$(echo $d | awk '{print $2}')"; if [[ "$(bluetoothctl devices Connected | grep $n)" ]]; then notify-send "Connected."; else notify-send "Failed to connect."; fi; fi;
bind = SUPER, M, exec, n="MX Master 3 Mac"; d="$(bluetoothctl devices | grep $n)"; dc="$(bluetoothctl devices Connected | grep $n)"; if [[ "$(echo $dc)" ]]; then notify-send "Already connected."; else notify-send "Connecting..."; bluetoothctl connect "$(echo $d | awk '{print $2}')"; if [[ "$(bluetoothctl devices Connected | grep $n)" ]]; then notify-send "Connected."; else notify-send "Failed to connect."; fi; fi;
bindit = , escape, submap, reset
bindrt = SUPER, SUPER_L, submap, reset
submap = reset

# Bluetooth Disconnect Mode
submap = bluetooth_disconnect
bind = SUPER, H, exec, n="TOZO-NC2"; d="$(bluetoothctl devices | grep $n)"; dc="$(bluetoothctl devices Connected | grep $n)"; if [[ -z "$(echo $dc)" ]]; then notify-send "Already disconnected."; else notify-send "Disconnecting..."; bluetoothctl disconnect "$(echo $d | awk '{print $2}')"; if [[ -z "$(bluetoothctl devices Connected | grep $n)" ]]; then notify-send "Disconnected."; else notify-send "Failed to disconnect."; fi; fi;
bind = SUPER, M, exec, n="MX Master 3 Mac"; d="$(bluetoothctl devices | grep $n)"; dc="$(bluetoothctl devices Connected | grep $n)"; if [[ "$(echo $dc)" ]]; then notify-send "Already disconnected."; else notify-send "Disconnecting..."; bluetoothctl disconnect "$(echo $d | awk '{print $2}')"; if [[ -z "$(bluetoothctl devices Connected | grep $n)" ]]; then notify-send "Disconnected."; else notify-send "Failed to disconnect."; fi; fi;
bindit = , escape, submap, reset
bindrt = SUPER, SUPER_L, submap, reset
submap = reset

# Workspaces
bind = SUPER, 1, workspace, 1
bind = SUPER, 2, workspace, 2
bind = SUPER, 3, workspace, 3
bind = SUPER, 4, workspace, 4
bind = SUPER, 5, workspace, 5
bind = SUPER, 6, workspace, 6
bind = SUPER, 7, workspace, 7
bind = SUPER, 8, workspace, 8
bind = SUPER, 9, workspace, 9
bind = SUPER, 0, workspace, 10
bind = SUPER SHIFT, 1, movetoworkspace, 1
bind = SUPER SHIFT, 2, movetoworkspace, 2
bind = SUPER SHIFT, 3, movetoworkspace, 3
bind = SUPER SHIFT, 4, movetoworkspace, 4
bind = SUPER SHIFT, 5, movetoworkspace, 5
bind = SUPER SHIFT, 6, movetoworkspace, 6
bind = SUPER SHIFT, 7, movetoworkspace, 7
bind = SUPER SHIFT, 8, movetoworkspace, 8
bind = SUPER SHIFT, 9, movetoworkspace, 9
bind = SUPER SHIFT, 0, movetoworkspace, 10

# Special Workspaces
bind = SUPER, A, togglespecialworkspace, scratchpad--A
bind = SUPER, B, togglespecialworkspace, scratchpad--B
bind = SUPER, C, togglespecialworkspace, scratchpad--C
bind = SUPER, D, togglespecialworkspace, scratchpad--D
bind = SUPER, E, togglespecialworkspace, scratchpad--E
bind = SUPER, F, togglespecialworkspace, scratchpad--F
bind = SUPER, G, togglespecialworkspace, scratchpad--G
bind = SUPER, H, togglespecialworkspace, scratchpad--H
bind = SUPER, I, togglespecialworkspace, scratchpad--I
bind = SUPER, J, togglespecialworkspace, scratchpad--J
bind = SUPER, K, togglespecialworkspace, scratchpad--K
bind = SUPER, L, togglespecialworkspace, scratchpad--L
bind = SUPER, M, togglespecialworkspace, scratchpad--M
bind = SUPER, N, togglespecialworkspace, scratchpad--N
bind = SUPER, O, togglespecialworkspace, scratchpad--O
bind = SUPER, P, togglespecialworkspace, scratchpad--P
bind = SUPER, Q, togglespecialworkspace, scratchpad--Q
bind = SUPER, R, togglespecialworkspace, scratchpad--R
bind = SUPER, S, togglespecialworkspace, scratchpad--S
bind = SUPER, T, togglespecialworkspace, scratchpad--T
bind = SUPER, U, togglespecialworkspace, scratchpad--U
bind = SUPER, V, togglespecialworkspace, scratchpad--V
bind = SUPER, W, togglespecialworkspace, scratchpad--W
bind = SUPER, X, togglespecialworkspace, scratchpad--X
bind = SUPER, Y, togglespecialworkspace, scratchpad--Y
bind = SUPER, Z, togglespecialworkspace, scratchpad--Z

bind = SUPER SHIFT, A, movetoworkspace, special:scratchpad--A
bind = SUPER SHIFT, B, movetoworkspace, special:scratchpad--B
bind = SUPER SHIFT, C, movetoworkspace, special:scratchpad--C
bind = SUPER SHIFT, D, movetoworkspace, special:scratchpad--D
bind = SUPER SHIFT, E, movetoworkspace, special:scratchpad--E
bind = SUPER SHIFT, F, movetoworkspace, special:scratchpad--F
bind = SUPER SHIFT, G, movetoworkspace, special:scratchpad--G
bind = SUPER SHIFT, H, movetoworkspace, special:scratchpad--H
bind = SUPER SHIFT, I, movetoworkspace, special:scratchpad--I
bind = SUPER SHIFT, J, movetoworkspace, special:scratchpad--J
bind = SUPER SHIFT, K, movetoworkspace, special:scratchpad--K
bind = SUPER SHIFT, L, movetoworkspace, special:scratchpad--L
bind = SUPER SHIFT, M, movetoworkspace, special:scratchpad--M
bind = SUPER SHIFT, N, movetoworkspace, special:scratchpad--N
bind = SUPER SHIFT, O, movetoworkspace, special:scratchpad--O
bind = SUPER SHIFT, P, movetoworkspace, special:scratchpad--P
bind = SUPER SHIFT, Q, movetoworkspace, special:scratchpad--Q
bind = SUPER SHIFT, R, movetoworkspace, special:scratchpad--R
bind = SUPER SHIFT, S, movetoworkspace, special:scratchpad--S
bind = SUPER SHIFT, T, movetoworkspace, special:scratchpad--T
bind = SUPER SHIFT, U, movetoworkspace, special:scratchpad--U
bind = SUPER SHIFT, V, movetoworkspace, special:scratchpad--V
bind = SUPER SHIFT, W, movetoworkspace, special:scratchpad--W
bind = SUPER SHIFT, X, movetoworkspace, special:scratchpad--X
bind = SUPER SHIFT, Y, movetoworkspace, special:scratchpad--Y
bind = SUPER SHIFT, Z, movetoworkspace, special:scratchpad--Z

# SWITCH
bind= , switch:Lid Switch, exec, hyprlock
